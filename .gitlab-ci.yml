stages:
  - sonarqube-check
  - test_migration
  - build_image
  - tagging
  - pre_build


pre_build:
  stage: pre_build
  image: dmoscalu/pgjdk17:latest
  before_script:
    - sudo chmod +x gradlew && sudo chmod +x database/db-env.sh #&& ./database/db-env.sh #pg_ctl start -D /var/lib/postgresql/data
  only:
    - merge_requests
  script:
    - pg_ctl start -D /var/lib/postgresql/data && ./database/db-env.sh && ./gradlew clean build #sudo chmod +x database/db-local.sh && sudo chmod +x gradlew


sonarqube-check:
  stage: sonarqube-check
  image: dmoscalu/pgjdk17:latest #gradle:8.2.0-jdk17-jammy
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  script:
    - sh gradlew sonar --debug
    - sudo chmod +x gradlew && sudo chmod +x database/db-env.sh
    - pg_ctl start -D /var/lib/postgresql/data && ./database/db-env.sh && sh gradlew test jacocoTestReport sonar
  allow_failure: true
  only:
    - main

test_migration:
  stage: test_migration
  image: dmoscalu/pgjdk17:latest
  before_script:
    - sudo chmod +x gradlew && sudo chmod +x database/db-env.sh
  only:
    - main
  script:
    - pg_ctl start -D /var/lib/postgresql/data && ./database/db-env.sh

build-backend:
  stage: build_image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$NEXUS_URL\":{\"auth\":\"$(echo -n $NEXUS_USER:$NEXUS_PASS | base64)\"}}}"> /kaniko/.docker/config.json
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --destination "$NEXUS_TLS:${CI_COMMIT_SHA}" #${CI_COMMIT_REF_SLUG}
  needs: [test_migration]

tagging:
  stage: tagging
  image: rdcib/git:latest
  before_script:
    - git remote set-url origin "https://$REPO_TOKEN_NAME:$REPO_ACCESS_TOKEN@gitlab.tool.mddinternship.com/devops/argocd.git"
    - git config --global user.email "danielBot@endava.com"
    - git config --global user.name "danielBot"
    # Reset to remote main branch
    - git clone https://$REPO_TOKEN_NAME:$REPO_ACCESS_TOKEN@gitlab.tool.mddinternship.com/devops/argocd.git
    - cd argocd/TraningLicenseSharing/Backend
  script:
    #- VERSION=$(cat ${CI_PROJECT_DIR}/project-version | grep -o -E '[0-9]+[.][0-9]+[.][0-9]')
    - yq -i 'select(di == 3).spec.template.spec.containers[0].image = "'$NEXUS_TLS':'$CI_COMMIT_SHA'"' ArgoCD.yaml
    - yq -i 'select(di == 5).spec.template.spec.containers[0].image = "'$NEXUS_TLS':'$CI_COMMIT_SHA'"' ArgoCD.yaml
    - git add ArgoCD.yaml
    - git commit -m "Update TagImage to 'CI_COMMIT_SHA'"
    - git push -o ci.skip origin HEAD:main
  needs: [build-backend]
  only:
    - main